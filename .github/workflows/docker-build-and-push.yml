name: Build and Push Docker Image

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "development"
        type: choice
        options:
          - development
          - production

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: cohstats/coh3-stats
  COOLIFY_UUID_DEV: eoccooco4kokk40gg8coow4k

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable=${{ github.ref_name == 'master' || github.ref_name == 'docker' }}
            type=raw,value=development,enable=${{ github.ref_name == 'master' || github.ref_name == 'docker' }}
            type=raw,value=production,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
          labels: |
            org.opencontainers.image.title=COH3 Stats Frontend
            org.opencontainers.image.description=Company of Heroes 3 Statistics and Leaderboards
            org.opencontainers.image.vendor=COH Stats
            org.opencontainers.image.licenses=LGPL-3.0

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Deploy to Coolify
        if: success() && (github.ref_name == 'docker' || startsWith(github.ref, 'refs/tags/v'))
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.COOLIFY_DEPLOY_TOKEN }}" \
            -H "Content-Type: application/json" \
            "https://coolify.ovh.coh3stats.com/api/v1/deploy?uuid=${{ env.COOLIFY_UUID_DEV }}&force=false"
